{"version":3,"sources":["common/routes.js","assets/img/gunsLogo.png","styled/componentsStyles/HeaderStyle.js","components/Header.js","common/helpers.js","redux/productReducer.js","redux/productsListReducer.js","redux/store.js","styled/variables.js","styled/commonStyles.js","styled/componentsStyles/ProductItemStyle.js","components/Raiting.js","styled/componentsStyles/ReviewFormStyle.js","components/ReviewForm.js","components/ProductItem.js","styled/componentsStyles/ProductListStyle.js","components/ProductsList.js","App.js","index.js"],"names":["routes","StyledHeader","styled","Navbar","Header","bg","variant","to","Brand","alt","src","Logo","width","height","className","fetchProducts","a","fetch","response","json","getProductsWatcher","getProductsWorker","addReviewWatcher","addReviewWorker","productSaga","GET_PRODUCT","ADD_REVIEW","SET_PRODUCT","initialState","addReview","review","type","takeEvery","args","call","put","payload","products","id","console","log","all","getProductsListWatcher","getProductsListWorker","productsListSaga","GET_PRODUCTS_LIST","SET_PRODUCTS_LIST","sagaMiddleware","createSagaMiddleware","rootReducer","combineReducers","productsList","state","action","product","reviews","store","createStore","applyMiddleware","run","sizes","devices","mobile","tablet","laptop","StyledNavLink","NavLink","ProductInfoContainer","Row","ProductItemImg","img","ProductItemDescription","div","Heading","h4","Description","p","ProductRating","ProductReviews","StyledNavLinkArrow","ArrowBackButton","Button","Rating","Form","Col","xs","Label","htmlFor","srOnly","Control","as","custom","value","ReviewButton","ErrorBlock","ReviewForm","props","initialValues","validationSchema","Yup","max","required","onSubmit","values","setSubmitting","resetForm","submitHandler","handleSubmit","getFieldProps","touched","errors","noValidate","name","cols","rows","isInvalid","ProductItem","dispatch","useDispatch","useParams","useSelector","getState","description","rating","useEffect","getProduct","Container","size","lg","sm","md","length","map","index","ProductCard","Card","ProductImg","Img","ProductTitle","Title","ProductsList","style","textDecoration","Body","App","exact","path","component","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.514b6209.chunk.js","sourcesContent":["export const routes = {\r\n    login: '',\r\n    productList: '/',\r\n    productItem: '/item/:id?',\r\n    productItemId: '/item/'\r\n};\r\n","export default __webpack_public_path__ + \"static/media/gunsLogo.1e2fac89.png\";","import { Navbar } from 'react-bootstrap';\r\nimport styled from 'styled-components';\r\n\r\nexport const StyledHeader = styled( Navbar )`\r\n  margin-bottom: 30px;\r\n  justify-content: space-between;\r\n`;\r\n\r\n","import React from 'react';\r\nimport { Navbar } from 'react-bootstrap';\r\nimport { NavLink } from 'react-router-dom';\r\n\r\nimport Logo from '../assets/img/gunsLogo.png';\r\n\r\nimport { StyledHeader } from '../styled/componentsStyles/HeaderStyle';\r\n\r\nexport const Header = () => (\r\n    <>\r\n        <StyledHeader bg=\"dark\" variant=\"dark\">\r\n            <NavLink to=\"/\">\r\n                <Navbar.Brand>\r\n                    <img\r\n                        alt=\"\"\r\n                        src={Logo}\r\n                        width=\"30\"\r\n                        height=\"30\"\r\n                        className=\"d-inline-block align-top\"\r\n                    />{' '}\r\n                    GunsPlace\r\n                </Navbar.Brand>\r\n            </NavLink>\r\n        </StyledHeader>\r\n    </>\r\n);\r\n","export const fetchProducts = async () => {\r\n    const response = await fetch( 'https://demo6435853.mockable.io/products' )\r\n    return await response.json();\r\n};\r\n","import { put, all, takeEvery, call } from 'redux-saga/effects'\r\n\r\nimport { fetchProducts } from '../common/helpers';\r\n\r\nexport const GET_PRODUCT = 'my-app/redux/GET_PRODUCT';\r\nexport const ADD_REVIEW = 'my-app/redux/ADD_REVIEW';\r\nconst SET_PRODUCT = 'my-app/redux/SET_PRODUCT';\r\n\r\nconst initialState = {};\r\n\r\nexport default function productsReducer(state = initialState, action) {\r\n    switch (action.type) {\r\n        case SET_PRODUCT:\r\n            return { ...state, ...action.payload }\r\n        case ADD_REVIEW:\r\n            return { ...state, reviews: [ [...action.review], ...state.reviews] }\r\n        default:\r\n            return state\r\n    }\r\n};\r\n\r\nexport const getProduct = (id) => ({ type: GET_PRODUCT, id })\r\nexport const setProduct = (payload) => ({ type: SET_PRODUCT, payload })\r\nexport const addReview = (review) => ({ type: ADD_REVIEW, review })\r\n\r\nfunction* getProductsWatcher() {\r\n    yield takeEvery( GET_PRODUCT, getProductsWorker )\r\n}\r\n\r\nfunction* getProductsWorker(args) {\r\n    try {\r\n        const response = yield call( fetchProducts );\r\n        yield put( setProduct( response.products[args.id] ) )\r\n    } catch (error) {\r\n        console.log( error );\r\n    }\r\n}\r\n\r\nfunction* addReviewWatcher() {\r\n    yield takeEvery( ADD_REVIEW, addReviewWorker )\r\n}\r\n\r\nfunction* addReviewWorker(review) {\r\n    try {\r\n        yield put( addReview( review ) )\r\n        debugger\r\n    } catch (error) {\r\n        console.log( error )\r\n    }\r\n}\r\n\r\nexport function* productSaga() {\r\n    yield all( [\r\n        getProductsWatcher(),\r\n        addReviewWatcher()\r\n    ] );\r\n}\r\n","import { put, all, takeEvery, call } from 'redux-saga/effects'\r\n\r\nimport { fetchProducts } from '../common/helpers';\r\n\r\nexport const GET_PRODUCTS_LIST = 'my-app/redux/GET_PRODUCTS_LIST';\r\nconst SET_PRODUCTS_LIST = 'my-app/redux/SET_PRODUCTS_LIST';\r\n\r\nconst initialState = {\r\n    products: []\r\n};\r\n\r\nexport default function productsListReducer (state = initialState, action) {\r\n    switch (action.type) {\r\n        case SET_PRODUCTS_LIST:\r\n            return { ...state, products: action.payload }\r\n\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\nexport const getProducts = () => ({ type: GET_PRODUCTS_LIST });\r\nexport const setProducts = (payload) => ({ type: SET_PRODUCTS_LIST, payload });\r\n\r\nfunction* getProductsListWatcher() {\r\n    yield takeEvery( GET_PRODUCTS_LIST, getProductsListWorker )\r\n}\r\n\r\nfunction* getProductsListWorker() {\r\n        try {\r\n            const response = yield call( fetchProducts );\r\n            yield put( setProducts( response.products ) )\r\n        } catch (error) {\r\n            console.log( error );\r\n        }\r\n}\r\n\r\nexport function* productsListSaga() {\r\n    yield all( [\r\n        getProductsListWatcher()\r\n    ] );\r\n}\r\n","import { createStore, applyMiddleware, combineReducers } from 'redux'\r\nimport createSagaMiddleware from 'redux-saga'\r\n\r\nimport productsReducer, { productSaga } from './productReducer';\r\nimport productsListReducer, { productsListSaga } from './productsListReducer';\r\n\r\nconst sagaMiddleware = createSagaMiddleware();\r\n\r\nconst rootReducer = combineReducers( {\r\n    productsList: productsListReducer,\r\n    product: productsReducer\r\n} );\r\n\r\nexport const store = createStore(rootReducer, applyMiddleware( sagaMiddleware ));\r\n\r\nsagaMiddleware.run( productsListSaga )\r\nsagaMiddleware.run( productSaga )\r\n","export const white = '#FFF'\r\nexport const black = '#000'\r\nexport const red = '#c90000'\r\n\r\nconst sizes = {\r\n    mobile: '560px',\r\n    tablet: '992px',\r\n    laptop: '1200px'\r\n};\r\n\r\nexport const devices = {\r\n    mobile: `max-width: ${sizes.mobile}`,\r\n    tablet: `max-width: ${sizes.tablet}`,\r\n    laptop: `max-width: ${sizes.laptop}`\r\n};\r\n","import { NavLink } from 'react-router-dom';\r\nimport styled from 'styled-components';\r\n\r\nimport { black } from './variables';\r\n\r\nexport const StyledNavLink = styled( NavLink )`\r\n  text-decoration: none;\r\n  color: ${black}\r\n`;\r\n","import styled from 'styled-components';\r\nimport { Button, Row } from 'react-bootstrap';\r\nimport { StyledNavLink } from '../commonStyles';\r\nimport { white } from '../variables';\r\n\r\nexport const ProductInfoContainer = styled( Row )`\r\n  align-items: center;\r\n  margin-bottom: 30px;\r\n`;\r\n\r\nexport const ProductItemImg = styled.img`\r\n  width: 100%;\r\n  margin: 30px 0;\r\n`;\r\n\r\nexport const ProductItemDescription = styled.div`\r\n  width: 100%;\r\n  display: flex;\r\n  flex-direction: column;\r\n  justify-content: flex-start;\r\n  align-items: flex-start;\r\n  flex-wrap: wrap;\r\n`;\r\n\r\nexport const Heading = styled.h4``\r\n\r\nexport const Description = styled.p`\r\n  font-size: 14px;\r\n`;\r\n\r\nexport const ProductRating = styled( Row )`\r\n  margin-bottom: 50px;\r\n`;\r\nexport const ProductReviews = styled( Row )`\r\n  width: 100%;\r\n  margin: 0;\r\n  display: flex;\r\n  flex-direction: column;\r\n  justify-content: flex-start;\r\n  align-items: flex-start;\r\n`;\r\n\r\nexport const StyledNavLinkArrow = styled( StyledNavLink )`\r\n  color: ${white};\r\n`;\r\n\r\nexport const ArrowBackButton = styled( Button )`\r\n  font-size: 30px;\r\n`;\r\n","import React from 'react';\r\nimport { Button, Col, Form } from 'react-bootstrap';\r\n\r\nexport const Rating = () => (\r\n    <Form>\r\n        <Form.Row className=\"align-items-center\">\r\n            <Col xs=\"auto\" className=\"my-1\">\r\n                <Form.Label className=\"mr-sm-2\" htmlFor=\"inlineFormCustomSelect\" srOnly>\r\n                    Preference\r\n                </Form.Label>\r\n                <Form.Control\r\n                    as=\"select\"\r\n                    className=\"mr-sm-2\"\r\n                    id=\"inlineFormCustomSelect\"\r\n                    custom\r\n                >\r\n                    <option value=\"0\">...</option>\r\n                    <option value=\"1\">1</option>\r\n                    <option value=\"2\">2</option>\r\n                    <option value=\"3\">3</option>\r\n                    <option value=\"4\">4</option>\r\n                    <option value=\"5\">5</option>\r\n                </Form.Control>\r\n            </Col>\r\n            <Col xs=\"auto\" className=\"my-1\">\r\n                <Button type=\"submit\">Поставить оценку</Button>\r\n            </Col>\r\n        </Form.Row>\r\n    </Form>\r\n);\r\n\r\n","import { Button } from 'react-bootstrap';\r\n\r\nimport styled from 'styled-components';\r\nimport { red } from '../variables';\r\n\r\nexport const ReviewButton = styled( Button )`\r\n  margin-top: 10px;\r\n  margin-bottom: 20px;\r\n`;\r\n\r\nexport const ErrorBlock = styled.div`\r\ncolor: ${red}\r\n`\r\n","import { Formik } from 'formik';\r\nimport React from 'react';\r\nimport { Form } from 'react-bootstrap';\r\nimport * as Yup from 'yup';\r\n\r\nimport { ErrorBlock, ReviewButton } from '../styled/componentsStyles/ReviewFormStyle';\r\n\r\nexport const ReviewForm = (props) =>\r\n    <>\r\n        <Formik\r\n            initialValues={{ review: '' }}\r\n            validationSchema={Yup.object( {\r\n                review: Yup.string()\r\n                    .max( 300, 'Длинна отзыва не должна превышать 300 символов' )\r\n                    .required( 'Отзыв не должен быть пустым' ),\r\n            } )}\r\n            onSubmit={(values, { setSubmitting, resetForm }) => {\r\n                props.submitHandler( values.review )\r\n                setSubmitting( false )\r\n                resetForm( '' )\r\n            }}>\r\n            {({\r\n                  handleSubmit,\r\n                  getFieldProps,\r\n                  touched,\r\n                  errors\r\n              }) => (\r\n                <Form\r\n                    noValidate\r\n                    onSubmit={handleSubmit}\r\n                    name=\"review\"\r\n                    type=\"textarea\">\r\n                    <Form.Control\r\n                        as=\"textarea\"\r\n                        name=\"review\"\r\n                        cols={80} rows={2}\r\n                        isInvalid={!!errors.review}\r\n                        {...getFieldProps( 'review' )}/>\r\n                    {touched.review && errors.review ? (\r\n                        <ErrorBlock>{errors.review}</ErrorBlock>\r\n                    ) : null}\r\n                    <ReviewButton type=\"submit\">Оставить отзыв</ReviewButton>\r\n                </Form>\r\n            )\r\n            }\r\n        </Formik>\r\n    </>;\r\n","import React, { useEffect } from 'react';\r\nimport { Col, Container } from 'react-bootstrap';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { useParams } from 'react-router-dom';\r\nimport { routes } from '../common/routes';\r\nimport { addReview, getProduct } from '../redux/productReducer';\r\nimport { store } from '../redux/store';\r\n\r\nimport {\r\n    ArrowBackButton,\r\n    Description,\r\n    Heading,\r\n    ProductInfoContainer,\r\n    ProductItemDescription,\r\n    ProductItemImg,\r\n    ProductRating,\r\n    ProductReviews,\r\n    StyledNavLinkArrow\r\n} from '../styled/componentsStyles/ProductItemStyle';\r\nimport { Rating } from './Raiting';\r\nimport { ReviewForm } from './ReviewForm';\r\n\r\nexport const ProductItem = () => {\r\n    const dispatch = useDispatch();\r\n    const { id } = useParams();\r\n    const product = useSelector( () => store.getState().product );\r\n    const { img, name, description, rating, reviews } = product;\r\n\r\n    useEffect( () => {\r\n        dispatch( getProduct( id ) )\r\n    }, [dispatch] );\r\n\r\n    const submitHandler = (review) => dispatch(addReview([review]))\r\n\r\n    return (\r\n        <>\r\n            <Container>\r\n                <StyledNavLinkArrow to={routes.productList}>\r\n                    <ArrowBackButton variant=\"dark\" size=\"sm\">&#60;</ArrowBackButton>\r\n                </StyledNavLinkArrow>\r\n                <ProductInfoContainer lg={11}>\r\n                    <Col sm={10} md={6} lg={6}>\r\n                        <ProductItemImg src={img}/>\r\n                    </Col>\r\n                    <Col sm={10} md={6} lg={6}>\r\n                        <ProductItemDescription>\r\n                            <Heading>{name}</Heading>\r\n                            <Description>{description}</Description>\r\n                        </ProductItemDescription>\r\n                    </Col>\r\n                </ProductInfoContainer>\r\n                <ProductRating lg={10}>\r\n                    <Col>\r\n                        <div>\r\n                            <h4>Оценка: {rating}</h4>\r\n                        </div>\r\n                        <Rating/>\r\n                    </Col>\r\n                </ProductRating>\r\n                <ProductReviews sm={10} lg={12}>\r\n                    <h5>Отзывы:</h5>\r\n                    {!reviews ? '' :\r\n                        reviews.length !== 0 ?\r\n                            reviews.map( (review, index) => (\r\n                                    <p key={index}>{review}</p>\r\n                                )\r\n                            ) :\r\n                            <p>Нет отзывов...</p>\r\n                    }\r\n                    <ReviewForm submitHandler={submitHandler} />\r\n                </ProductReviews>\r\n            </Container>\r\n        </>\r\n    )\r\n};\r\n","import styled from 'styled-components';\r\nimport { Card } from 'react-bootstrap';\r\n\r\nimport { devices } from '../variables';\r\n\r\nexport const ProductCard = styled( Card )`\r\n  min-height: 200px;\r\n  box-sizing: border-box;\r\n  transition: box-shadow 0.4s ease-in-out;\r\n  margin-bottom: 30px;\r\n\r\n  &:hover {\r\n    box-shadow: 0 0 10px rgba(0, 0, 0, 0.5);\r\n    cursor: pointer;\r\n  }\r\n\r\n  @media screen and (${devices.tablet}) {\r\n\r\n    display: flex;\r\n    flex-direction: column;\r\n    align-items: center;\r\n\r\n  }\r\n`;\r\n\r\nexport const ProductImg = styled( Card.Img )`\r\n  width: 250px;\r\n  margin: 30px 20px 0;\r\n`;\r\n\r\nexport const ProductTitle = styled(Card.Title)`\r\n  color: black;\r\n  &:hover {\r\n    text-decoration: none;\r\n  }\r\n`;\r\n","import React, { useEffect } from 'react';\r\nimport { Card, Col, Container, Row } from 'react-bootstrap';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\n\r\nimport { routes } from '../common/routes';\r\nimport { getProducts } from '../redux/productsListReducer';\r\nimport { store } from '../redux/store';\r\nimport { StyledNavLink } from '../styled/commonStyles';\r\nimport { ProductCard, ProductImg, ProductTitle } from '../styled/componentsStyles/ProductListStyle';\r\n\r\nexport const ProductsList = () => {\r\n    const dispatch = useDispatch();\r\n    const products = useSelector( () => store.getState().productsList.products);\r\n\r\n    useEffect( () => {\r\n        dispatch( getProducts() )\r\n    },[dispatch] );\r\n\r\n    return (\r\n        <>\r\n            <Container>\r\n                <Row xs={1} md={2} lg={3}>\r\n                    {\r\n                        products.map( product => (\r\n                                <Col key={product.id}>\r\n                                    <StyledNavLink to={`${routes.productItemId}${product.id}`}\r\n                                                   style={{ textDecoration: 'none' }}>\r\n                                        <ProductCard>\r\n                                            <ProductImg variant=\"top\" src={product.img}/>\r\n                                            <Card.Body>\r\n                                                <ProductTitle as=\"p\">{product.name}</ProductTitle>\r\n                                            </Card.Body>\r\n                                        </ProductCard>\r\n                                    </StyledNavLink>\r\n                                </Col>\r\n                            )\r\n                        )\r\n                    }\r\n                </Row>\r\n            </Container>\r\n        </>\r\n    )\r\n};\r\n","import React from 'react';\nimport { BrowserRouter, Route, Switch } from 'react-router-dom';\n\nimport { routes } from './common/routes';\n\nimport { Header, ProductItem, ProductsList } from './components/index';\n\nexport const App = () => (\n    <BrowserRouter>\n        <div>\n            <Header/>\n            <Switch>\n                <Route exact path={routes.productList} component={ProductsList}/>\n                <Route path={routes.productItem} component={ProductItem}/>\n            </Switch>\n        </div>\n    </BrowserRouter>\n);\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Provider } from 'react-redux';\n\nimport { App } from './App';\nimport { store } from './redux/store';\n\nReactDOM.render(\n    <React.StrictMode>\n        <Provider store={store}>\n            <App/>\n        </Provider>\n    </React.StrictMode>,\n    document.getElementById( 'root' )\n);\n"],"sourceRoot":""}